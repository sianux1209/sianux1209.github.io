---
title: "플러터(Flutter) BLoC 기초 : Counter"
categories:
- flutter
tags:
  - flutter
  - bloc
  - cubit

toc: true
toc_sticky: true

---

> 플러터의 상태관리(State Management)를 위한 패키지인 BLoC의 Counter 기본 예제를 통해 학습합니다. 이 예제는 Cubit을 사용하여 BLoC를 구현합니다.


![img1](https://raw.githubusercontent.com/felangel/bloc/master/docs/assets/bloc_logo_full.png)

### BLoC()

BLoC는 Flutter의 상태관리(State management)를 위한 강력한 방법입니다. 다른 상태관리 패키지로는 `Provider`, `GetX` 등이 있으며 간단히 `setState()` 함수를 호출하는 방법도 있습니다.

일반적으로 **Bloc > Provider or GetX > setState** 순으로 유지보수성이 낮아진다고 얘기할 수 있습니다. 유지보수성이 낮아진다는 말은 소스코드 간의 의존성이 강하여 변경하기 어려울 수 있다는 말입니다.

BLoC 패턴은 UI와 비즈니스 로직을 분리하기 위해 설계된 디자인패턴입니다. Google의 Paolo Soares와 Cong Hui가 설계했으며 DartConf 2018에서 처음 발표되었습니다.

----------


### BLoC의 원리

위젯은 `Sink`를 통해 `BLoC`로 이벤트를 보내고 `streams`를 통해 위젯으로 이벤트를 받는 컨셉입니다.

![img2](https://www.didierboelens.com/images/blog/streams_bloc.png)

위 사진은 간단히 말해서 위젯에 상태변화가 발생하면 BLoC를 통해 Streaming 한다는 말입니다.

----------


### BLoC의 장/단점

BLoC를

#### 장점

- UI와 비즈니스 로직의 분리

- 유지보수성 향상

- TDD에 효과적


#### 단점

- 복잡한 소스코드 구조

- 학습의 어려움

----------

Reactive Programming


 Google 의 Paolo Soares 와 Cong Hui 가 설계했으며 DartConf 2018 (2018년 1월 23-24일) 에서 처음 발표되었습니다 . YouTube 에서 비디오를 참조하십시오 .

플러터 패키지는 많은 기업과 다양한 개발자들이 Flutter와 Dart의 생태계에 공유한 패키지입니다.

이 패키지들을 활용해서 여러 가지 기능을 직접 구현하지 않고 활용할 수 있습니다.

예를 들어 Google Map, FireBase 등을 직접 구현하지 않고 구현된 라이브러리를 통해 쉽고 빠르게 적용할 수 있습니다

----------

### 플러터 패키지 사용법

#### 1. Command

```command
$ flutter pub add package_name
```

**\[TIP\]**
`flutter pub add package_name` 명령어를 실행하면 `flutter pub get` 명령어가 묵시적으로 수행됩니다.
{: .notice--info}

커맨드창에서 위 명령어를 입력하면 패키지가 다운로드 및 적용됩니다.

적용된 패키지는 `pubspec.yaml`의 `dependencies`에서 아래와 같이 확인 가능합니다.


- pubspec.yaml
  
```yaml
...

dependencies:
  flutter:
    sdk: flutter

  bloc: ^8.0.2  # flutter pub add bloc
  flutter_bloc: ^8.0.1 # flutter pub add flutter_bloc
...

```

추가로 다양한 플러터 패키지는 [pub.dev](https://pub.dev/)에서 찾아볼 수 있습니다.


#### 2. pubspec.yaml에 직접 추가

`pubspec.yaml` 파일의 `dependencies`에서 직접 패키지를 추가하고 아래 명령어를 실행해도 됩니다.

```command
$ flutter pub get
```

----------

### 플러터 패키지를 찾는 방법

[pub.dev](https://pub.dev/)에 접속해서 찾고자 하는 패키지명을 검색하면 아래 사진과 같이 관련된 여러 패키지가 나오는 것을 확인할 수 있습니다.

![img2]({{ site.url }}/assets/images/flutter_pub_1.png)

해당 패키지에 들어가면 Readme, Changelog, Installing 등 각각의 메뉴에서 패키지 설치, 사용 방법, 버전 정보 등의 확인이 가능합니다.

![img3]({{ site.url }}/assets/images/flutter_pub_2.png)

추가로 [pub.dev](https://pub.dev/)에서는 사람들에게 인기있는 패키지 또한 볼 수 있습니다.

![img4]({{ site.url }}/assets/images/flutter_pub_3.png)

어떠한 패키지가 사람들에게 인기가 있는지 확인하고 이 패키지를 통해 직접 구현해보는 방법 또한 실력 향상에 도움이 됩니다.



----------

플러터 패키지 사용 방법에 대한 자세한 내용은 [Flutter Docs](https://docs.flutter.dev/development/packages-and-plugins/using-packages) 또는 [pub.dev](https://pub.dev/)에서 확인하실 수 있습니다.
{: .notice--info}